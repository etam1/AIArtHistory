{"ast":null,"code":"var _jsxFileName = \"/Users/ethantam/Desktop/AIArtHistory/src/components/InfiniteCanvas.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { ReactInfiniteCanvas } from \"react-infinite-canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const canvasRef = useRef(); // Remove the type annotation\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workflowContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"700px\",\n        height: \"400px\",\n        border: \"1px solid red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactInfiniteCanvas, {\n        ref: canvasRef,\n        onCanvasMount: mountFunc => {\n          mountFunc.fitContentToView({\n            scale: 1\n          });\n        },\n        customComponents: [{\n          component: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              var _canvasRef$current;\n              (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.fitContentToView({\n                scale: 1\n              });\n            },\n            children: \"fitToView\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this),\n          position: \"top-left\",\n          offset: {\n            x: 120,\n            y: 10\n          }\n        }],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"200px\",\n            height: \"200px\",\n            background: \"red\"\n          },\n          children: \"asdasdsdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","ReactInfiniteCanvas","jsxDEV","_jsxDEV","App","_s","canvasRef","className","children","style","width","height","border","ref","onCanvasMount","mountFunc","fitContentToView","scale","customComponents","component","onClick","_canvasRef$current","current","fileName","_jsxFileName","lineNumber","columnNumber","position","offset","x","y","background","_c","$RefreshReg$"],"sources":["/Users/ethantam/Desktop/AIArtHistory/src/components/InfiniteCanvas.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { ReactInfiniteCanvas } from \"react-infinite-canvas\";\n\nfunction App() {\n  const canvasRef = useRef(); // Remove the type annotation\n\n  return (\n    <div className=\"workflowContainer\">\n      <div style={{ width: \"700px\", height: \"400px\", border: \"1px solid red\" }}>\n        <ReactInfiniteCanvas\n          ref={canvasRef}\n          onCanvasMount={(mountFunc) => {\n            mountFunc.fitContentToView({ scale: 1 });\n          }}\n          customComponents={[\n            {\n              component: (\n                <button\n                  onClick={() => {\n                    canvasRef.current?.fitContentToView({ scale: 1 });\n                  }}\n                >\n                  fitToView\n                </button>\n              ),\n              position: \"top-left\",\n              offset: { x: 120, y: 10 },\n            },\n          ]}\n        >\n          <div style={{ width: \"200px\", height: \"200px\", background: \"red\" }}>\n            asdasdsdas\n          </div>\n        </ReactInfiniteCanvas>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGN,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE5B,oBACEG,OAAA;IAAKI,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCL,OAAA;MAAKM,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAgB,CAAE;MAAAJ,QAAA,eACvEL,OAAA,CAACF,mBAAmB;QAClBY,GAAG,EAAEP,SAAU;QACfQ,aAAa,EAAGC,SAAS,IAAK;UAC5BA,SAAS,CAACC,gBAAgB,CAAC;YAAEC,KAAK,EAAE;UAAE,CAAC,CAAC;QAC1C,CAAE;QACFC,gBAAgB,EAAE,CAChB;UACEC,SAAS,eACPhB,OAAA;YACEiB,OAAO,EAAEA,CAAA,KAAM;cAAA,IAAAC,kBAAA;cACb,CAAAA,kBAAA,GAAAf,SAAS,CAACgB,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBL,gBAAgB,CAAC;gBAAEC,KAAK,EAAE;cAAE,CAAC,CAAC;YACnD,CAAE;YAAAT,QAAA,EACH;UAED;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;UACDC,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE;YAAEC,CAAC,EAAE,GAAG;YAAEC,CAAC,EAAE;UAAG;QAC1B,CAAC,CACD;QAAAtB,QAAA,eAEFL,OAAA;UAAKM,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE,OAAO;YAAEoB,UAAU,EAAE;UAAM,CAAE;UAAAvB,QAAA,EAAC;QAEpE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAlCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}