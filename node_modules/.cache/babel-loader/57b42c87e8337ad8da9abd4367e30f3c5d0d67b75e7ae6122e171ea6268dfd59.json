{"ast":null,"code":"var _jsxFileName = \"/Users/ethantam/Desktop/AIArtHistory/src/components/InfiniteCanvas.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { ReactInfiniteCanvas } from \"react-infinite-canvas\";\n// import { COMPONENT_POSITIONS } from \"../helpers/constants.js\"; // Adjust the path if necessary\nimport { COMPONENT_POSITIONS } from \"../helpers/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteCanvas = () => {\n  _s();\n  const canvasRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"700px\",\n      height: \"400px\",\n      border: \"1px solid red\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactInfiniteCanvas, {\n      ref: canvasRef,\n      onCanvasMount: mountFunc => {\n        mountFunc.fitContentToView({\n          scale: 1\n        });\n      },\n      customComponents: [{\n        component: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _canvasRef$current;\n            (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.fitContentToView({\n              scale: 1\n            });\n          },\n          children: \"fitToView\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this),\n        position: COMPONENT_POSITIONS.TOP_LEFT,\n        offset: {\n          x: 120,\n          y: 10\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\",\n          height: \"200px\",\n          background: \"red\"\n        },\n        children: \"asdasdsdas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteCanvas, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = InfiniteCanvas;\nexport default InfiniteCanvas;\nvar _c;\n$RefreshReg$(_c, \"InfiniteCanvas\");","map":{"version":3,"names":["useRef","ReactInfiniteCanvas","COMPONENT_POSITIONS","jsxDEV","_jsxDEV","InfiniteCanvas","_s","canvasRef","style","width","height","border","children","ref","onCanvasMount","mountFunc","fitContentToView","scale","customComponents","component","onClick","_canvasRef$current","current","fileName","_jsxFileName","lineNumber","columnNumber","position","TOP_LEFT","offset","x","y","background","_c","$RefreshReg$"],"sources":["/Users/ethantam/Desktop/AIArtHistory/src/components/InfiniteCanvas.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { ReactInfiniteCanvas } from \"react-infinite-canvas\";\n// import { COMPONENT_POSITIONS } from \"../helpers/constants.js\"; // Adjust the path if necessary\nimport { COMPONENT_POSITIONS } from \"../helpers/constants\";\n\nconst InfiniteCanvas = () => {\n  const canvasRef = useRef();\n\n  return (\n    <div style={{ width: \"700px\", height: \"400px\", border: \"1px solid red\" }}>\n      <ReactInfiniteCanvas\n        ref={canvasRef}\n        onCanvasMount={(mountFunc) => {\n          mountFunc.fitContentToView({ scale: 1 });\n        }}\n        customComponents={[\n          {\n            component: (\n              <button\n                onClick={() => {\n                  canvasRef.current?.fitContentToView({ scale: 1 });\n                }}\n              >\n                fitToView\n              </button>\n            ),\n            position: COMPONENT_POSITIONS.TOP_LEFT,\n            offset: { x: 120, y: 10 },\n          },\n        ]}\n      >\n        <div style={{ width: \"200px\", height: \"200px\", background: \"red\" }}>\n          asdasdsdas\n        </div>\n      </ReactInfiniteCanvas>\n    </div>\n  );\n};\n\nexport default InfiniteCanvas;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D;AACA,SAASC,mBAAmB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGP,MAAM,CAAC,CAAC;EAE1B,oBACEI,OAAA;IAAKI,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAgB,CAAE;IAAAC,QAAA,eACvER,OAAA,CAACH,mBAAmB;MAClBY,GAAG,EAAEN,SAAU;MACfO,aAAa,EAAGC,SAAS,IAAK;QAC5BA,SAAS,CAACC,gBAAgB,CAAC;UAAEC,KAAK,EAAE;QAAE,CAAC,CAAC;MAC1C,CAAE;MACFC,gBAAgB,EAAE,CAChB;QACEC,SAAS,eACPf,OAAA;UACEgB,OAAO,EAAEA,CAAA,KAAM;YAAA,IAAAC,kBAAA;YACb,CAAAA,kBAAA,GAAAd,SAAS,CAACe,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBL,gBAAgB,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAC,CAAC;UACnD,CAAE;UAAAL,QAAA,EACH;QAED;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;QACDC,QAAQ,EAAEzB,mBAAmB,CAAC0B,QAAQ;QACtCC,MAAM,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAG;MAC1B,CAAC,CACD;MAAAnB,QAAA,eAEFR,OAAA;QAAKI,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEsB,UAAU,EAAE;QAAM,CAAE;QAAApB,QAAA,EAAC;MAEpE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAhCID,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}